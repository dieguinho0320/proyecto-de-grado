apiVersion: v1
kind: ConfigMap
metadata:
  namespace: swprodaks
  name: config-k8sLocal-nginx
  labels:
    tier: backend
data:
    server {
       listen 80;
       server_name experienciaaspirantespre.uniandes.edu.co;

       gzip            on;
       gzip_min_length 1100;
       gzip_buffers 4 8k;
       gzip_proxied    expired no-cache no-store private auth;
       gzip_types      text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/rss+xml image/svg+xml;
       gzip_disable     "MSIE [1-6]\.";

       location / {
         proxy_pass http://k8sLocal-py:5000;  # Cambiar a Flask
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
       }

       location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
         return 403;
         error_page 403 /403_error.html;
       }

       location ~* \.(ico|pdf|flv)$ {
         expires 1y;
       }

       location ~* \.(js|css|png|jpg|jpeg|gif|swf|xml|txt)$ {
         expires 14d;
       }

       error_page 502 https://mantenimiento.uniandes.edu.co/tecnologia/index.html;
       error_page 504 https://mantenimiento.uniandes.edu.co/tecnologia/index.html;
       error_page 404 https://mantenimiento.uniandes.edu.co/tecnologia/index.html;

       add_header Access-Control-Allow-Origin *;
       proxy_buffering off;
       add_header Strict-Transport-Security "max-age=15768000" always;
       add_header X-Content-Type-Options nosniff;

       reset_timedout_connection on;
       client_body_timeout 10;
       send_timeout 2;
       keepalive_timeout 30;
       keepalive_requests 100000;
       client_max_body_size 1000M;
     }
---
############ Service para Flask (Gunicorn)
apiVersion: v1
kind: Service
metadata:
  namespace: swprodaks
  name: k8sLocal-py
  labels:
    tier: backend
spec:
  selector:
    app: k8sLocal-py
    tier: backend
  ports:
  - protocol: TCP
    port: 5000  # Cambiado a 5000 para Flask
---
############ Service para Nginx
apiVersion: v1
kind: Service
metadata:
  namespace: swprodaks
  name: k8sLocal-nginx
  labels:
    tier: backend
spec:
  selector:
    app: k8sLocal-nginx
    tier: backend
  ports:
  - protocol: TCP
    port: 80
---
###################### Deployment Flask (Gunicorn)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sLocal-py
  namespace: swprodaks
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sLocal-py
      tier: backend
  template:
    metadata:
      labels:
        app: k8sLocal-py
        tier: backend
    spec:
      imagePullSecrets:
      - name: myregistrykey
      volumes:
      - name: code
        persistentVolumeClaim:
          claimName: azurefile-pvc
      containers:
      - name: k8sLocal-py
        image: 
        readinessProbe:
          initialDelaySeconds: 250
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
          tcpSocket:
            port: 5000  # Cambiado a 5000 para Flask
        livenessProbe:
          initialDelaySeconds: 250
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
          tcpSocket:
            port: 5000  # Cambiado a 5000 para Flask
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 250m
            memory: 250Mi
        volumeMounts:
        - name: code
          mountPath: /var/www/html
          subPath: k8sLocal.uniandes.edu.co
        env:
        - name: TABLE_PREFIX
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: TABLE_PREFIX
        - name: DB_NAME
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: DB_NAME
        - name: DB_SITE_URL
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: DB_SITE_URL
        - name: DB_HOST
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: DB_HOST
        - name: DB_USER
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
              configMapKeyRef:
                  name: config-k8sLocal-nginx
                  key: DB_PASSWORD
---
################ deployment nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: swprodaks
  name: k8sLocal-nginx
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sLocal-nginx
      tier: backend
  template:
    metadata:
      labels:
        app: k8sLocal-nginx
        tier: backend
    spec:
      volumes:
      - name: code
        persistentVolumeClaim:
          claimName: azurefile-pvc
      - name: config
        configMap:
          name: config-k8sLocal-nginx
          items:
          - key: config
            path: site.conf
      containers:
      - name: k8sLocal-nginx
        image: nginx:1.21.0-alpine
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 
          successThreshold: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 50Mi
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code
          mountPath: /var/www/html
          subPath: k8sLocal.uniandes.edu.co
        - name: config
          mountPath: /etc/nginx/conf.d
---
##############ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8sLocal-nginx
  namespace: swprodaks
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/request-timeout: "240"
spec:
  tls:
    - hosts:
        - k8slocal.uniandes.edu.co
      secretName: crtuniandes
  rules:
    - host: k8slocal.uniandes.edu.co
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: k8sLocal-nginx
                port: 
                  number: 80
